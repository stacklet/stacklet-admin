name: "CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.9
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  Tests:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2.2.1
        with:
          python-version: "3.9"

      - name: Install poetry
        shell: bash
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          python get-poetry.py -y
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            .venv
            ~/.cache
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Install Package
        shell: bash
        run: poetry run pip install -e .

      - name: Pytest run
        shell: bash
        run: poetry run pytest -v tests
